#include <bits/stdc++.h>
using namespace std;
#define in freopen("in.txt","r",stdin);
#define out freopen("out.txt","w",stdout);
#define ios ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);//////////
#define sz(v) ((long long)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define allr(v) ((v).rbegin()),((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define MP make_pair
#define s  second
#define f  first

const int OO = (int) 1e9;

long long t, flag, x;
string input;
vector<string> maze;
bool vis[31][81];
char wallChar;

bool valid(int i, int j) {
	return (i >= 0 && i < 31 && j >= 0 && j < 81);
}

void MarkReachable(int i, int j) {
	if (!valid(i, j) || maze[i][j] == wallChar || vis[i][j]) {
		return;
	}
	vis[i][j] = 1;
	maze[i][j] = '#';
	MarkReachable(i, j + 1);
	MarkReachable(i, j - 1);
	MarkReachable(i + 1, j);
	MarkReachable(i - 1, j);
}

int main() {

	cin >> t;
	getchar();

	while (t--) {
		maze.clear();
		clr(vis,0);
		while (getline(cin, input)) {
			maze.push_back(input);
			if (input[0] == '_') {
				break;
			}
		}

		wallChar = maze[0][0];

		for (int i = 0; i < sz(maze); i++) {
			for (int j = 0; j < sz(maze[i]); j++) {
				if (maze[i][j] == '*') {
					MarkReachable(i, j);
				}
			}
		}

		for (int i = 0; i < sz(maze); i++) {
			for (int j = 0; j < sz(maze[i]); j++) {
				cout << maze[i][j];
			}
			cout << endl;
		}
	}
	return 0;
}
