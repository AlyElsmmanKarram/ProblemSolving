#include <bits/stdc++.h>
using namespace std;
#define in freopen("in.txt","r",stdin);
#define out freopen("out.txt","w",stdout);
#define ios ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);//////////
#define sz(v) ((long long)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define allr(v) ((v).rbegin()),((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define MP make_pair
#define s  second
#define f  first

const int OO = (int) 1e9;

int dx[8] = { 0, 0, -1, 1, 1, 1, -1, -1 };
int dy[8] = { 1, -1, 0, 0, 1, -1, 1, -1 };

long long n = 20000001, m, ans, x, cnt;

vector<long long> isPrime(n, 1);
vector<long long> primes;
vector<pair<long long, long long> > pairs;

void sieve() {
	isPrime[0] = isPrime[1] = 0;
	for (long long i = 2; i * i < n; i++) {
		if (isPrime[i]) {
			for (long long j = i * 2; j < n; j += i) {
				isPrime[j] = 0;
			}
		}
	}
}

int main() {
	sieve();

	for (int i = 2; i < n; i++) {
		if (isPrime[i]) {
			primes.push_back(i);
		}
	}

	m = sz(primes);
	for (int i = 1; i < m; i++) {
		if (primes[i] == (primes[i - 1] + 2)) {
			cnt++;
			pairs.push_back( { primes[i - 1], primes[i] });
		}
	}

	while (cin >> x) {
		x--;
		cout << "(" << pairs[x].f << ", " << pairs[x].s << ")" << endl;
	}

	return 0;
}
