#include <bits/stdc++.h>
using namespace std;
#define in freopen("in.txt","r",stdin);
#define out freopen("out.txt","w",stdout);
#define ios ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);//////////
#define sz(v) ((long long)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define allr(v) ((v).rbegin()),((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define MP make_pair
#define s  second
#define f  first

const int OO = (int) 1e9;

int dx[8] = { 0, 0, -1, 1, 1, 1, -1, -1 };
int dy[8] = { 1, -1, 0, 0, 1, -1, 1, -1 };

long long n, m, height, great, small;
vector<long long> coins;

long long gcd(long long a, long long b) {
	return b == 0 ? a : gcd(b, a % b);
}
long long lcm(long long a, long long b) {
	return (a * b / gcd(a, b));
}

void take(int idx, int d = 1, int cnt = 0) {
	if (idx == n) {
		if (cnt == 4) {
			great = min((((height + d - 1) / d) * d), great);
			small = max(((height / d) * d), small);
		}
		return;
	}

	if (cnt == 4) {
		great = min((((height + d - 1) / d) * d), great);
		small = max(((height / d) * d), small);
		return;
	}

	take(idx + 1, d, cnt);
	take(idx + 1, lcm(d, coins[idx]), cnt + 1);
}

int main() {

	while (cin >> n >> m && (n || m)) {
		coins.clear();
		coins.resize(n);
		for (int i = 0; i < n; i++) {
			cin >> coins[i];
		}

		for (int i = 0; i < m; i++) {
			great = 1e18, small = -1;
			cin >> height;
			take(0);
			cout << small << " " << great << endl;
		}
	}

	return 0;
}
